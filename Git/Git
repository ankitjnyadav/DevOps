SCM
(Eg is Github)
uploading --> push
downloading --> pull

Version Control System (VCS)

Github has Single Point of failure, it is CVCS, Centralized.
Git is VCS,it is DVCS, De-Centralised.

Workspace is folder containing variety of folders and files
Whereas, Repository is folder containing  variety of folders and files along with Version Control.

$git clone <url>
It will the download the code from the GitHub or CVCS.

$git log <filename>
---------------------------------------------
ay@Neelkanth:~/PycharmProjects/DevOps$ git log
commit 9571af0bdf427c331fdc54575475d0c81bce8812 (HEAD -> master)
Author: Ankit Yadav <reach.ankitjnyadav@gmail.com>
Date:   Tue Apr 28 20:56:42 2020 +0530

    Hello DevOps World!
----------------------------------------------

$git status
Give the status of current status of the repository.
What are the changes, addition, modification or deletiong in the repository.

$git status -s
----------------------------------------------
ay@Neelkanth:~/PycharmProjects/DevOps$ git status -s
AM Git/Git
?? .idea/vcs.xml
----------------------------------------------

Working Area
Staging Area
Commit Area


$git add <filename>
$git commit -m <message>

GitHub becomes origin

$git push

HEAD points to the current version
origin/master points to version of data GitHub has.


First, Add
Then, Commit
Finally, Push

To rollback
$git reset HEAD <commit_SHA_value> <filename>
$git checkout -- <filename>

---------------Day2--------------------

$git init
to initialize/create a local repository


$git status -s
-s, --short <--> show status concisely

ay@Neelkanth:~/PycharmProjects/DevOps$ git status -s
 M Git/Git

M --> signifies that file is modified.

$ git status -s
 M Git/Git
?? new.html

?? -> untracked file

$ git add .
$ git status -s
M  Git/Git
A  new.html

A -> Newly added

$git commit <filename> -m <comment>

First time setup, its imp as its the identity who is commit.
$ git config --global user.name "someone"
$ git config --global user.email "someone@someplace.com"


git remote add <remote_name> <CVCS_url>
------------------------------------------------------------------
How to create a track between local and remote
------------------------------------------------------------------
(base) ay@Neelkanth:~/PycharmProjects/DevOps$ git push --set-upstream origin master
Username for 'https://github.com': username@email.com
Password for 'username@github.com': github_password
Counting objects: 15, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (11/11), done.
Writing objects: 100% (15/15), 2.28 KiB | 1.14 MiB/s, done.
Total 15 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/ankitjnyadav/DevOps.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.
(base) ay@Neelkanth:~/PycharmProjects/DevOps$
------------------------------------------------------------------
(base) ay@Neelkanth:~/PycharmProjects/DevOps$ git remote show origin
* remote origin
  Fetch URL: https://github.com/ankitjnyadav/DevOps.git
  Push  URL: https://github.com/ankitjnyadav/DevOps.git
  HEAD branch: master
  Remote branch:
    master tracked
  Local branch configured for 'git pull':
    master merges with remote master
  Local ref configured for 'git push':
    master pushes to master (up to date)
------------------------------------------------------------------

---------------Day3--------------------

Hooks
-----


(base) ay@Neelkanth:~/PycharmProjects/DevOps/.git$ ls -a
.  ..  branches  COMMIT_EDITMSG  config  description  HEAD  hooks  index  info  logs  objects  ORIG_HEAD  refs
(base) ay@Neelkanth:~/PycharmProjects/DevOps/.git$ cd hooks/
(base) ay@Neelkanth:~/PycharmProjects/DevOps/.git/hooks$ ls
applypatch-msg.sample      post-update.sample     prepare-commit-msg.sample  pre-receive.sample
commit-msg.sample          pre-applypatch.sample  pre-push.sample            update.sample
fsmonitor-watchman.sample  pre-commit.sample      pre-rebase.sample

- Run Hooks(program/script) on specified 'Trigger' points.


---------------Day4--------------------
Git Fetch

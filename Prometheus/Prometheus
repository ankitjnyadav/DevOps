Prometheus - Famous monitoring(metric not log) tool
Monitoring the app is also known as App Instrumentation.

> Application Performance Metrics (APM) - AppDynamics, DataDog, New Relic

Prometheus is tool that can monitor each and every tool. 99.9%
Take the data and transform it to Visual form like Graphs. Tool- Graphana.

Role - Go and collect the information of something (metric).
Whatever part we monitor is known as Target.
Node instrumentation is monitoring the complete Node (OS).

PromQL - the Query Lang to perform query on Prometheus.

TSDB - TimeStampDataBase

WebUI : http://localhost:9090/

Agent/Program - Exporter

Node Exporter - http://localhost:9100/

Prometheus does scrapping(pull) in order to fetch the data.

prometheus configuration can be changed from prometheus.yml file.

In DB it stores 3 things:
1. TimeStamp
2. Tag/Labels
3. All the information | Metric

Eg of Query: node_memory_MemFree_bytes{instance="localhost:9100",job="node1"}
Another Eg: up{job="node1"}

--------------------------------------------------------

Exporter -> As they export the metrics. Can also be considered as an Agent.
Prometheus pulls the metrics from exporter.


Docker Intregation:
https://docs.docker.com/config/daemon/prometheus/

cd /etc/docker/key.json


Restart the prometheus program without terminating it (Downtime)
------
ps -aux | grep prometheus
kill -HUP pid
------
This will restart the program.
------
pgrep prometheus/process_name
will return process ID
------
kill -HUP $(pgrep prometheus)

Kill signals -- man 7 signal

promQL-
node_memory_MemFree_bytes{job="node1"}[1m]

--------------------------------------------------------
Grafana
-------
systemctl daemon-reload
systemctl enable grafana-server
systemctl start grafana-server


kubectl create deployment myprom --image=vimal13/prometheus
kubectl expose deployment myprom --type=NodePort --port=9090


nohup programName &
cat nohup.out


PromQL
up
up{job=~"node."}
up{job=~"node.|docker"}


RegEx:
. : any one char
[] : select from the regex within this brackets
[^0-9] : Will negect, find anything but not anything in between 0-9

abc+ : quantifier - 1 or more times
abc* : quantifier - 0 or more times
\s : space
\w : one character
\W : All the special character
\d : Only numbers
abc{3} : abccc
abc{3,5} : abcccc
abc{3,} : Min. 3 and end is undefined
^hello : Checks in the start of the line
hello$ : Checks in the end of the line
^hello$ : Begins and ends on with the chars.
hello|hi : either hello or hi
------------------------------------

node_filesystem_size_bytes{job="node1",device=~"/dev/sda.+|/dev/mapper/.+"}
node_filesystem_size_bytes{job="node1",device=~"/dev/sd[a-z].+|/dev/mapper/.+"}
